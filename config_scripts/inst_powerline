#!/bin/bash
FONT_PATH=
REP_ROOT=
GOT_FONTS=0
power_req(){
    sudo apt-get update
    # TODO: Implement 2 variables to hold the
    # name of th powerline and fonts packages.
    query=$(apt-cache search  ^powerline$)
    if test -n "$query";then
        ## Package powerline is supposed to
        ## install the packages installed manually 
        ## before
        sudo apt-get install -y powerline
    else
        sudo apt-get install python3-pip
        sudo pip install powerline-status
    fi
    # TODO: Download fonts to /tmp
    # TODO: Download more fonts to have more choice
    # Retrieve preferred font
    wget https://github.com/powerline/fonts/raw/master/Hack/Hack-Regular.ttf

    query=  # Clean query before new search 
    query=$(apt-cache search  ^fonts-powerline$)
    if test -n "$query";then
        sudo apt-get install -y fonts-powerline
        if test "$?" = "0";then
            GOT_FONTS=1
        fi
    else
        ## Package fonts-powerline is supposed to
        ## install the packages installed manually 
        ## before
        wget https://github.com/powerline/powerline/raw/develop/font/PowerlineSymbols.otf
        wget https://github.com/powerline/powerline/raw/develop/font/10-powerline-symbols.conf
    fi
}
get_font_path(){
    line_number=$(xset q | grep -ni 'Font Path' | cut --bytes=1,2)
    line_number=$(($line_number+1))
    FONT_PATH=$(xset q | head --lines=$line_number | tail --lines=1 |\
        cut --delimiter=, --fields=1 | cut -c 1,2 --complement)
}
move_fonts_update(){
    # Move preferred font to FONT_PATH
    sudo mv Hack-Regular.ttf $FONT_PATH
    if test "$GOT_FONTS" -ne 1;then
        sudo mv PowerlineSymbols.otf $FONT_PATH
    fi
    fc-cache -vf $FONT_PATH
}
test_support(){
    response=""
    vim --version | grep -E '\+python' &> /dev/null
    if [ $? -eq 0 ];then 
        echo "Vim has python support"
    else
        echo -e "Vim does not have python support this has to be fixed"\
            "or powerline will not work on vim"
    fi
}
get_rep_root(){
# This function obtains the path to the repository-root
    REP_ROOT=$(pip show powerline-status | grep -i location \
        | cut --delimiter=' ' -f 2)
}
update_bashrc(){
    powerl_config=$(cat<<-_EOF_
#######Start of powerline related config
powerline-daemon -q
POWERLINE_BASH_CONTINUATION=1
POWERLINE_BASH_SELECT=1
. $REP_ROOT/powerline/bindings/bash/powerline.sh
#######End of powerline related config
_EOF_
    )
    grep -ie powerline-daemon $HOME/.bashrc &> /dev/null
    if [ ! $? -eq 0 ];then
        echo "$powerl_config" >> $HOME/.bashrc
    else
        echo "Config line alredy there"
    fi
}

update_vimrc(){
    vpower_config=$(cat<<-_EOF_
" Making powerline work"
set  rtp+=$REP_ROOT/powerline/bindings/vim/
set laststatus=2
_EOF_
)
    # TODO: Just use the grep command as an argument to
    # "if"
    grep -ie rtp+ $HOME/.vimrc &> /dev/null
    if [ ! $? -eq 0 ];then
        echo "$vpower_config" >> $HOME/.vimrc
    else
        echo "Config line alredy in vimrc"
    fi
    
}
power_req &&\
    get_font_path && move_fonts_update &&\
    test_support &&\
    get_rep_root && update_bashrc && update_vimrc
